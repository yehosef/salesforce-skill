# Salesforce CI/CD Pipeline
# Place this file in: .github/workflows/salesforce-ci.yml

name: Salesforce CI/CD

on:
  push:
    branches:
      - main
      - master
      - develop
  pull_request:
    branches:
      - main
      - master
      - develop

env:
  SALESFORCE_CLI_VERSION: latest

jobs:
  validate:
    name: Validate Deployment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Salesforce CLI
        run: |
          npm install -g @salesforce/cli@${{ env.SALESFORCE_CLI_VERSION }}
          sf version

      - name: Authorize Salesforce Org
        run: |
          (umask 077 && echo "${{ secrets.SALESFORCE_AUTH_URL }}" > auth_url.txt)
          sf org login sfdx-url -f auth_url.txt -a target-org
          rm -f auth_url.txt

      - name: Preview Deployment
        run: |
          sf project deploy preview -d src/ -o target-org

      - name: Validate Deployment (Dry-Run)
        run: |
          sf project deploy start -d src/ -o target-org --dry-run --test-level RunLocalTests --wait 30

      - name: Report Validation Results
        if: always()
        run: |
          sf project deploy report -o target-org

  deploy:
    name: Deploy to Salesforce
    runs-on: ubuntu-latest
    needs: validate
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Salesforce CLI
        run: |
          npm install -g @salesforce/cli@${{ env.SALESFORCE_CLI_VERSION }}
          sf version

      - name: Authorize Salesforce Org
        run: |
          (umask 077 && echo "${{ secrets.SALESFORCE_AUTH_URL }}" > auth_url.txt)
          sf org login sfdx-url -f auth_url.txt -a production-org
          rm -f auth_url.txt

      - name: Deploy to Production
        run: |
          sf project deploy start -d src/ -o production-org --test-level RunLocalTests --wait 60

      - name: Report Deployment Results
        if: always()
        run: |
          sf project deploy report -o production-org

      - name: Notify on Failure
        if: failure()
        run: |
          echo "::error::Deployment to production failed! Check the logs above."

  run-tests:
    name: Run Apex Tests
    runs-on: ubuntu-latest
    needs: validate
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Salesforce CLI
        run: |
          npm install -g @salesforce/cli@${{ env.SALESFORCE_CLI_VERSION }}
          sf version

      - name: Authorize Salesforce Org
        run: |
          (umask 077 && echo "${{ secrets.SALESFORCE_AUTH_URL }}" > auth_url.txt)
          sf org login sfdx-url -f auth_url.txt -a test-org
          rm -f auth_url.txt

      - name: Run Apex Tests
        run: |
          sf apex test run -o test-org -c --test-level RunLocalTests --wait 30

      - name: Get Test Results
        if: always()
        run: |
          sf apex test report -o test-org

      - name: Comment PR with Test Results
        if: always() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const output = `
            ### Apex Test Results
            ✅ Tests completed. Check the workflow logs for details.
            `;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

# Setup Instructions:
# 1. Go to your GitHub repository Settings → Secrets and variables → Actions
# 2. Add a new secret: SALESFORCE_AUTH_URL
# 3. Get your auth URL by running: sf org display -o <your-org> --verbose
# 4. Copy the "Sfdx Auth Url" value and paste it as the secret value
# 5. Commit this file to .github/workflows/salesforce-ci.yml
# 6. Push to trigger the workflow
